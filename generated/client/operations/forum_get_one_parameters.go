package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewForumGetOneParams creates a new ForumGetOneParams object
// with the default values initialized.
func NewForumGetOneParams() *ForumGetOneParams {
	var ()
	return &ForumGetOneParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewForumGetOneParamsWithTimeout creates a new ForumGetOneParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewForumGetOneParamsWithTimeout(timeout time.Duration) *ForumGetOneParams {
	var ()
	return &ForumGetOneParams{

		timeout: timeout,
	}
}

// NewForumGetOneParamsWithContext creates a new ForumGetOneParams object
// with the default values initialized, and the ability to set a context for a request
func NewForumGetOneParamsWithContext(ctx context.Context) *ForumGetOneParams {
	var ()
	return &ForumGetOneParams{

		Context: ctx,
	}
}

// NewForumGetOneParamsWithHTTPClient creates a new ForumGetOneParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewForumGetOneParamsWithHTTPClient(client *http.Client) *ForumGetOneParams {
	var ()
	return &ForumGetOneParams{
		HTTPClient: client,
	}
}

/*ForumGetOneParams contains all the parameters to send to the API endpoint
for the forum get one operation typically these are written to a http.Request
*/
type ForumGetOneParams struct {

	/*Slug
	  Идентификатор форума.

	*/
	Slug string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the forum get one params
func (o *ForumGetOneParams) WithTimeout(timeout time.Duration) *ForumGetOneParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the forum get one params
func (o *ForumGetOneParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the forum get one params
func (o *ForumGetOneParams) WithContext(ctx context.Context) *ForumGetOneParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the forum get one params
func (o *ForumGetOneParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the forum get one params
func (o *ForumGetOneParams) WithHTTPClient(client *http.Client) *ForumGetOneParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the forum get one params
func (o *ForumGetOneParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSlug adds the slug to the forum get one params
func (o *ForumGetOneParams) WithSlug(slug string) *ForumGetOneParams {
	o.SetSlug(slug)
	return o
}

// SetSlug adds the slug to the forum get one params
func (o *ForumGetOneParams) SetSlug(slug string) {
	o.Slug = slug
}

// WriteToRequest writes these params to a swagger request
func (o *ForumGetOneParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param slug
	if err := r.SetPathParam("slug", o.Slug); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
