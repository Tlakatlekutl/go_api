package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/bozaro/tech-db-forum/generated/models"
)

// ThreadGetPostsReader is a Reader for the ThreadGetPosts structure.
type ThreadGetPostsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ThreadGetPostsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewThreadGetPostsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewThreadGetPostsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewThreadGetPostsOK creates a ThreadGetPostsOK with default headers values
func NewThreadGetPostsOK() *ThreadGetPostsOK {
	return &ThreadGetPostsOK{}
}

/*ThreadGetPostsOK handles this case with default header values.

Информация о сообщениях форума.

*/
type ThreadGetPostsOK struct {
	Payload *models.PostPage
}

func (o *ThreadGetPostsOK) Error() string {
	return fmt.Sprintf("[GET /thread/{slug_or_id}/posts][%d] threadGetPostsOK  %+v", 200, o.Payload)
}

func (o *ThreadGetPostsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostPage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewThreadGetPostsNotFound creates a ThreadGetPostsNotFound with default headers values
func NewThreadGetPostsNotFound() *ThreadGetPostsNotFound {
	return &ThreadGetPostsNotFound{}
}

/*ThreadGetPostsNotFound handles this case with default header values.

Ветка обсуждения отсутсвует в форуме.

*/
type ThreadGetPostsNotFound struct {
}

func (o *ThreadGetPostsNotFound) Error() string {
	return fmt.Sprintf("[GET /thread/{slug_or_id}/posts][%d] threadGetPostsNotFound ", 404)
}

func (o *ThreadGetPostsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
